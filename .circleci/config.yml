# Golang CircleCI 2.0 configuration file
#
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  lint:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/adlerrobert/terraform-provider-ldap
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: make fmtcheck
      #- run: make lint

  test:
    docker:
      - image: circleci/golang:1.13
      - image: openmicroscopy/apacheds
    parallelism: 4

    working_directory: /go/src/github.com/adlerrobert/terraform-provider-ldap
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for apacheds
          command: dockerize -wait tcp://localhost:389 -timeout 2m
      - run:
          command: |
            apt-get update
            apt-get install -y ldap-utils
            ldapadd -v -h localhost:389 -c -x -D uid=admin,ou=system -w secret -f ./ldapserver/ldap_test_data.ldif
      - run:
          environment:
            GOTESTSUM_JUNITFILE: /tmp/test-reports/unit/junit.xml
            GOTESTSUM_FORMAT: short
          command: |
            mkdir -p /tmp/test-reports/unit
            gotestsum -- \
              -coverprofile=coverage.txt \
              ./...
      - store_test_results:
          path: /tmp/test-reports
      - run:
          shell: /bin/bash -eo pipefail
          command: |
            bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2.1
  lint_and_test:
    jobs:
      #- lint
      - test
